version: 0.2

env:
  variables:
    CACHE_CONTROL: "100"
    S3_BUCKET: dev-artifacts-218131192655
    FOLDER: deploys/project

phases:

  install:
    runtime-versions:
      python: 3.9

  build:
    commands:
      - echo Entered the build phase...
      - echo $AWS_DEFAULT_REGION and ${S3_BUCKET}
      - aws cloudformation deploy --template-file ./templates/networking/vpcParameters.yaml --stack-name dev-vpc-cidr-mydata --parameter-overrides VpcCidr=10.192.0.0/16 CidrPrivateSubnetA=10.192.10.0/24 CidrPrivateSubnetB=10.192.20.0/24 CidrPrivateSubnetC=10.192.30.0/24 CidrPublicSubnetA=10.192.40.0/24 CidrPublicSubnetB=10.192.50.0/24 CidrPublicSubnetC=10.192.60.0/24 VpcCidr2=11.192.0.0/16 CidrPrivateSubnetA2=11.192.10.0/24 CidrPrivateSubnetB2=11.192.20.0/24 CidrPrivateSubnetC2=11.192.30.0/24 CidrPublicSubnetA2=11.192.40.0/24 CidrPublicSubnetB2=11.192.50.0/24 CidrPublicSubnetC2=11.192.60.0/24 --capabilities CAPABILITY_AUTO_EXPAND CAPABILITY_NAMED_IAM CAPABILITY_IAM --no-fail-on-empty-changeset
      - aws cloudformation deploy --template-file ./templates/pipeline.yaml --stack-name dev-deploy-pipeline --parameter-overrides BucketArtifactName=${S3_BUCKET} --capabilities CAPABILITY_AUTO_EXPAND CAPABILITY_NAMED_IAM CAPABILITY_IAM --no-fail-on-empty-changeset

  post_build:
    commands:
      - python -m pip install --upgrade pip
      - cd src/layers/python
      - pip install --target . -r requirements.txt
      - cd ..
      - cd ..
      - cd ..
      - | 
        for t in $(ls "templates");
          do
            aws cloudformation package --template-file ./templates/$t --s3-bucket ${S3_BUCKET} --output-template-file ./templates/$t --s3-prefix ${FOLDER}
            if [ "${t}" != "MasterTemplate.json" ]
            then
              aws s3 cp ./templates/$t s3://${S3_BUCKET}/${FOLDER}/$t
            fi
          done
      - aws s3 cp ./templates/networking s3://${S3_BUCKET}/deploys/infrastructure/ --recursive --acl bucket-owner-full-control
      - cd templates
      - zip -r MasterTemplate.zip ./MasterTemplate.json
      - aws s3 cp MasterTemplate.zip s3://${S3_BUCKET}/${FOLDER}/MasterTemplate.zip

artifacts:
   files:
     - '**/*'
